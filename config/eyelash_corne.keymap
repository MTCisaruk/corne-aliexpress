#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <23 24 25>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <8 9>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&tog 3           &kp Q      &kp W      &kp F             &kp P         &kp B                                &kp UP_ARROW               &kp J        &kp L                      &kp U          &kp Y      &kp COLON  &tog 4
&kp EQUAL        &kp LA(A)  &kp RA(R)  &kp LC(S)         &kp LS(T)     &kp G                      &kp LEFT  &kp ENTER       &kp RIGHT  &kp M        &kp RS(N)                  &kp RA(RC(E))  &kp RA(I)  &kp LA(O)  &kp APOS
&kp PRINTSCREEN  &kp Z      &kp X      &kp C             &kp D         &kp V        &kp C_MUTE              &kp DOWN_ARROW             &kp K        &kp H                      &kp COMMA      &kp DOT    &kp FSLH   &kp MINUS
                                       &lt 3 UNDERSCORE  &mt LGUI DEL  &lt 1 SPACE                                                     &lt 1 ENTER  &mt RIGHT_SHIFT BACKSPACE  &lt 2 ESCAPE
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
            label = "CLMK";
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
&kp INS     &kp N1               &kp N2                    &kp N3                     &kp N4              &kp N5                                   &mmv MOVE_UP                     &kp N6         &kp N7         &kp N8        &kp N9        &kp RPAR      &kp CLCK
&kp DOLLAR  &kp LA(EXCLAMATION)  &kp RA(LEFT_PARENTHESIS)  &kp LC(RIGHT_PARENTHESIS)  &kp LS(UNDERSCORE)  &kp ASTERISK             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS      &kp RS(EQUAL)  &kp RC(LBKT)  &kp RA(RBKT)  &kp LA(BSLH)  &kp PERCENT
&trans      &kp AT               &kp GRAVE                 &kp TILDE                  &kp POUND           &kp SEMICOLON  &trans                    &mmv MOVE_DOWN                   &kp AMPERSAND  &kp PLUS       &kp LBRC      &kp RBRC      &kp PIPE      &kp CARET
                                                           &trans                     &trans              &trans                                                                    &trans         &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        function_layer {
            display-name = "FN";
            bindings = <
&kp F1          &kp F2        &kp F3        &kp F4        &kp F5        &kp F6                                         &mmv MOVE_UP                     &kp F7           &kp F8           &kp F9                          &kp F10                           &kp F11   &kp F12
&bt BT_CLR      &out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_ON   &rgb_ug RGB_OFF  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(52,100,86)  &kp HOME  &kp PG_UP
&bt BT_CLR_ALL  &sys_reset    &bootloader   &trans        &trans        &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI                 &rgb_ug RGB_BRD                   &kp END   &kp PG_DN
                                            &trans        &trans        &trans                                                                          &trans           &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        navigation_layer {
            display-name = "NAV";
            bindings = <
&tog 0  &trans          &kp UP_ARROW    &trans           &trans     &trans                              &mmv MOVE_UP                     &trans  &kp N7        &kp N8        &kp N9        &kp PRINTSCREEN  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans              &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp N0           &trans
&trans  &trans          &trans          &trans           &trans     &trans     &none                    &mmv MOVE_DOWN                   &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans           &trans
                                        &mkp MCLK        &mkp LCLK  &mkp RCLK                                                            &trans  &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        game_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R      &kp T                                  &mmv MOVE_UP                     &trans  &trans          &kp UP_ARROW  &trans     &trans  &tog 0
&kp LSHFT  &kp A  &kp S  &kp D      &kp F      &kp G                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &trans
&kp LCTRL  &kp Z  &kp X  &kp C      &kp V      &kp B        &trans                    &mmv MOVE_DOWN                   &trans  &trans          &trans        &trans     &trans  &trans
                         &kp LCTRL  &kp LSHFT  &lt 3 SPACE                                                             &trans  &trans          &trans
            >;

            label = "GAME";
            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };
    };
};
